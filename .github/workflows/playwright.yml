name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: write
#   pages: write
#   id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Run Playwright tests
      run: yarn playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    # We want a unique identifier to be used when we create subdirectories for our github pages with reports
    - name: Set a timestamp
      if: always()
      id: timestampid
      # this will store current time with UTC in outputs.timestamp (eg of value: 20231028_233147Z)
      run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

    - name: Push the new files to github pages
      if: always()
    # This will create a separate branch called gh-pages where it will store only reports. And from where it will push all future changes
    # to github pages. Having a separate branch will keep the reports and changes commits separate to your main/master
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report # from what folder to take files. It takes only contents
        destination_dir: ${{ steps.timestampid.outputs.timestamp }} # a sub-directory where to publish to avoid overwriting other reports

    - name: Write URL in summary
      if: always()
      run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/${{ github.repository }}/${{ steps.timestampid.outputs.timestamp }}/" >> $GITHUB_STEP_SUMMARY
